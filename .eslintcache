[{"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/index.js":"1","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/reportWebVitals.js":"2","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/App/App.js":"3","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/styled/Styled.js":"4","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Home/Home.js":"5","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Header/Header.js":"6","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Nav/Nav.js":"7","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Dashboard/Dashboard.js":"8","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Login/Login.js":"9","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/About/About.js":"10","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Register/Register.js":"11","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/contexts/PostContext.js":"12","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/AddPost.js":"13","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostsList.js":"14","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostCard.js":"15","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/config.js":"16","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostItem.js":"17"},{"size":278,"mtime":1612454977456,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1612296294280,"results":"20","hashOfConfig":"21"},{"size":2704,"mtime":1612825613274,"results":"22","hashOfConfig":"19"},{"size":134,"mtime":1612452503360,"results":"23","hashOfConfig":"21"},{"size":969,"mtime":1612827727882,"results":"24","hashOfConfig":"19"},{"size":362,"mtime":1612460809920,"results":"25","hashOfConfig":"19"},{"size":1052,"mtime":1612473818045,"results":"26","hashOfConfig":"19"},{"size":714,"mtime":1612827617195,"results":"27","hashOfConfig":"19"},{"size":799,"mtime":1612827727882,"results":"28","hashOfConfig":"19"},{"size":571,"mtime":1612474014350,"results":"29","hashOfConfig":"19"},{"size":1092,"mtime":1612477355341,"results":"30","hashOfConfig":"19"},{"size":157,"mtime":1612802671910,"results":"31","hashOfConfig":"19"},{"size":344,"mtime":1612824902573,"results":"32","hashOfConfig":"19"},{"size":4479,"mtime":1612827366201,"results":"33","hashOfConfig":"19"},{"size":670,"mtime":1612817621746,"results":"34","hashOfConfig":"19"},{"size":123,"mtime":1612802671908,"results":"35","hashOfConfig":"19"},{"size":4334,"mtime":1612817432119,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"143bln",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"172v2a0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/index.js",[],["77","78"],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/reportWebVitals.js",[],["79","80"],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/App/App.js",["81","82"],"import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport api from '../../config'\nimport Home from '../Home/Home'\nimport Header from '../Header/Header'\nimport Nav from '../Nav/Nav'\nimport Dashboard from '../Dashboard/Dashboard'\nimport About from '../About/About'\nimport Login from '../Login/Login'\nimport Register from '../Register/Register'\nimport AddPost from '../Post/AddPost'\nimport PostItem from '../Post/PostItem'\nimport PostContext from '../../contexts/PostContext'\n\nexport class App extends Component {\n  state = {\n    posts: [],\n    addPost: this.handleAddPost,\n    editPost: this.handleEditPost,\n    deleteRoute: this.handleDeletePost,\n  };\n\n  componentDidMount() {\n    fetch(`${api.API_ENDPOINT}/posts`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${api.API_KEY}`,\n      },\n    })\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error('Something went wrong, please try again.');\n      }\n      return res;\n    })\n    .then((res) => res.json())\n    .then((data) => {\n      this.setState({\n        posts: data,\n      })\n    })\n    .catch((error) => {\n      console.error({error})\n    })\n  };\n\n  handleDeletePost = (post_id) => {\n    const newPosts = this.state.posts.filter((post) => post.id != post_id);\n    this.setState({\n      posts: newPosts,\n    })\n  };\n\n  handleEditPost = (editedPost) => {\n    this.setState({\n      posts: this.state.posts.map((post) => \n        post.id != editedPost.id ? post : editedPost\n      ),\n    });\n  };\n\n  handleAddPost = (newPost) => {\n    this.setState({\n      posts: [...this.state.posts, newPost],\n    });\n  };\n\n  render(){\n    const value = {\n      posts: this.state.posts,\n      addPost: this.handleAddPost,\n      deletePost: this.handleDeletePost,\n      editPost: this.handleEditPost,\n    };\n\n    return (\n    <PostContext.Provider value={value}>\n      <div>\n            <header>\n              <Header />\n              <nav>\n                <Nav />\n              </nav>\n            </header>\n            <main>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/dashboard' component={Dashboard} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/register' component={Register} />\n                <Route exact path='/addpost' component={AddPost} />\n                <Route exact path='/posts/:post_id' component={PostItem} />\n              </Switch>\n            </main>\n        </div>\n    </PostContext.Provider>    \n    );\n  }\n}\n\nexport default App;","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/styled/Styled.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Home/Home.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Header/Header.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Nav/Nav.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Dashboard/Dashboard.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Login/Login.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/About/About.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Register/Register.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/contexts/PostContext.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/AddPost.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostsList.js",["83"],"import React, { Component } from 'react';\nimport PostCard from './PostCard'\nimport PostContext from '../../contexts/PostContext';\nimport api from '../../config';\n\n\nexport class PostsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            adding: false\n        }\n    };\n    \n    static defaultProps = {\n        match: {\n            params: {},\n        },\n    };\n\n    static contextType = PostContext\n\n    handleClickAdd = () => {\n        this.setState({\n            adding: true\n        })\n    };\n\n    handleClickCancel = () => {\n        this.setState({\n            adding: false\n        })\n    }\n\n    render() {\n\n    const posts = this.context.posts\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newPost = {\n            title: event.target['post-title'].value,\n            content: event.target['post-content'].value,\n            date_published: new Date(),\n        };\n\n        fetch(`${api.API_ENDPOINT}/posts`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: `Bearer ${api.API_KEY}`,\n            },\n            body: JSON.stringify(newPost)\n        })\n        .then((res) => {\n            if (!res.ok) return res.json().then((e) => Promise.reject(e));\n            return res.json();\n        })\n        .then((post) => {\n            this.context.addPost(post);\n            this.props.history.push(`/posts/${post.id}`);\n        })\n        .catch((error) => {\n            console.error({error})\n        });\n    };\n\n        if (this.state.adding === false) {\n            return (\n            <div>\n                <button className=\"buttons\" onClick={this.handleClickAdd}>\n                    New Post\n                </button>\n            <section>\n                <ul\n                style={{\n                listStyleType: \"none\",\n                textDecoration: \"none\",\n                color: \"inherit\",\n                paddingLeft: \"0\",\n                }}\n                >\n                {posts.map((post) => (\n                    <li key={post.id} style={{ textDecoration: \"none\" }}>\n                        <PostCard \n                            id={post.id}\n                            title={post.title}\n                            content={post.content}\n                            date_published={post.date_published}\n                        />\n                    </li>\n                ))}\n                </ul>\n            </section>\n            </div>\n        )\n        }\n\n    else {\n        return (\n            <div>\n            <div>\n                <h2>New Post</h2>\n                <section>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"post-title\">Title</label>\n                        <input \n                            type=\"text\"\n                            id='post-title'\n                            name='post-title'\n                        />\n\n                        <label htmlFor=\"post-content\">Content</label>\n                        <textarea\n                            type=\"text\"\n                            id='post-content'\n                            name='post-content'\n                        ></textarea> \n                        <br />\n                    <button className=\"buttons\">Submit</button>\n                    <button\n                        className=\"buttons\"\n                        onClick={this.handleClickCancel}\n                        className=\"buttons\"\n                    >\n                        Cancel\n                    </button>\n                    </form>\n                </section>\n            </div>\n            <div>\n                <ul\n                style={{\n                listStyleType: \"none\",\n                textDecoration: \"none\",\n                color: \"inherit\",\n                paddingLeft: \"0\",\n                }}\n                >\n                {posts.map((post) => (\n                    <li key={post.id} style={{ textDecoration: \"none\" }}>\n                        <PostCard \n                            id={post.id}\n                            title={post.title}\n                            content={post.content}\n                            date_published={post.date_published}\n                        />\n                    </li>\n                ))}\n                </ul>\n            </div>\n            </div>\n        )\n    }\n    }\n}\n\nexport default PostsList\n","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostCard.js",[],["84","85"],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/config.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostItem.js",["86"],"import React, { Component } from 'react';\nimport PostContext from '../../contexts/PostContext';\nimport PostCard from './PostCard';\nimport api from '../../config';\n\nexport class PostItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false\n        }\n    }\n    static defaultProps = {\n        match: {\n            params: {}\n        }\n    };\n\n    static contextType = PostContext;\n\n    handleClickEdit = () => {\n        this.setState({\n            editing: true\n        })\n    };\n\n    handleClickCancel = () => {\n        this.props.history.push(`/posts/${this.props.match.params.post_id}`);\n    }\n\n    handleClickBack = () => {\n        this.props.history.push('/dashboard')\n    }\n\n    render() {\n    const { posts } = this.context;\n    const { post_id } = this.props.match.params;\n    const post = posts.find((post) => post.id === Number(post_id));\n\n    if (!post) {\n      return (\n        <div>\n          <p>Error.</p>\n        </div>\n      );\n    }\n\n    const handleClickDelete = (event) => {\n        event.preventDefault();\n        const { post_id } = this.props.match.params;\n\n        fetch(`${api.API_ENDPOINT}/posts/${post_id}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: `Bearer ${api.API_KEY}`,\n            },\n        })\n        .then(() => {\n            this.props.history.push(`/dashboard`);\n            this.context.deletePost(post_id)\n        })\n        .catch((error) => {\n            console.error({error})\n        })\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const editedPost = {\n            id: post.id,\n            title: event.target['post-title'].value,\n            content: event.target['post-content'].value,\n            date_published: post.date_published,\n        };\n\n        fetch(`${api.API_ENDPOINT}/posts/${post_id}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                Authorization: `Bearer ${api.API_KEY}`,\n            },\n            body: JSON.stringify(editedPost),\n        })\n        .then(() => {\n            this.context.editPost(editedPost);\n            this.setState({editing: false})\n        })\n        .catch((error) => {\n            console.error({error})\n        })\n    };\n\n    if (this.state.editing === false) {\n        return (\n            <div>\n                <PostCard\n                    id={post.id}\n                    title={post.title}\n                    content={post.content}\n                />\n                <button className=\"buttons\" onClick={this.handleClickEdit}>\n                    Edit\n                </button>\n                <button className=\"buttons\" type=\"button\" onClick={handleClickDelete}>\n                    Delete\n                </button>\n                <button className=\"buttons\" onClick={this.handleClickBack}>\n                    Back\n                </button>\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div>\n                <h2>Edit {post.title}</h2>\n                <section>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"post-title\">Title</label>\n                        <input \n                            type=\"text\"\n                            id='post-title'\n                            name='post-title'\n                            defaultValue={post.title}\n                        />\n\n                        <label htmlFor=\"post-content\">Content</label>\n                        <textarea\n                            type=\"text\"\n                            id='post-content'\n                            name='post-content'\n                            defaultValue={post.content}\n                        ></textarea> \n                        <br />\n                    <button className=\"buttons\">Submit</button>\n                    <button\n                        className=\"buttons\"\n                        onClick={this.handleClickCancel}\n                        className=\"buttons\"\n                    >\n                        Cancel\n                    </button>\n                    </form>\n                </section>\n            </div>\n        )\n    }\n\n\n    }\n}\n\nexport default PostItem\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":49,"column":64,"nodeType":"95","messageId":"96","endLine":49,"endColumn":66},{"ruleId":"93","severity":1,"message":"94","line":58,"column":17,"nodeType":"95","messageId":"96","endLine":58,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":124,"column":25,"nodeType":"99","endLine":124,"endColumn":44},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"97","severity":1,"message":"98","line":141,"column":25,"nodeType":"99","endLine":141,"endColumn":44},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["102"],["103"],"no-global-assign","no-unsafe-negation"]