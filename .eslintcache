[{"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/index.js":"1","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/reportWebVitals.js":"2","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/App/App.js":"3","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/styled/Styled.js":"4","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Header/Header.js":"5","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Nav/Nav.js":"6","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Login/Login.js":"7","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/About/About.js":"8","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Register/Register.js":"9","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/contexts/UserContext.js":"10","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostsList.js":"11","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostCard.js":"12","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/config.js":"13","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UserPage.js":"14","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UsersList.js":"15","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayerCard.js":"16","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayerResults.js":"17","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/auth-api-service.js":"18","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/token-service.js":"19","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/idle-service.js":"20","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/PrivateRoute/PrivateRoute.js":"21","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/PublicRoute/PublicRoute.js":"22","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/MyTeam/MyTeam.js":"23","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Landing/Landing.js":"24","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Network/Network.js":"25","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UserCard.js":"26","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayersList.js":"27"},{"size":374,"mtime":1613592234808,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1612296294280,"results":"30","hashOfConfig":"31"},{"size":1625,"mtime":1614022005655,"results":"32","hashOfConfig":"29"},{"size":134,"mtime":1612452503360,"results":"33","hashOfConfig":"31"},{"size":594,"mtime":1613513444283,"results":"34","hashOfConfig":"29"},{"size":2885,"mtime":1613666911611,"results":"35","hashOfConfig":"29"},{"size":1598,"mtime":1613940898007,"results":"36","hashOfConfig":"29"},{"size":797,"mtime":1613946269360,"results":"37","hashOfConfig":"29"},{"size":2430,"mtime":1613745336145,"results":"38","hashOfConfig":"29"},{"size":6966,"mtime":1614013802730,"results":"39","hashOfConfig":"29"},{"size":4848,"mtime":1614014905390,"results":"40","hashOfConfig":"29"},{"size":4306,"mtime":1614022391400,"results":"41","hashOfConfig":"29"},{"size":222,"mtime":1613595329691,"results":"42","hashOfConfig":"29"},{"size":2505,"mtime":1614020419558,"results":"43","hashOfConfig":"29"},{"size":1278,"mtime":1613764761699,"results":"44","hashOfConfig":"29"},{"size":2018,"mtime":1614022059604,"results":"45","hashOfConfig":"29"},{"size":1882,"mtime":1614021923420,"results":"46","hashOfConfig":"29"},{"size":1143,"mtime":1613664240717,"results":"47","hashOfConfig":"29"},{"size":1058,"mtime":1613591649695,"results":"48","hashOfConfig":"29"},{"size":820,"mtime":1613674820392,"results":"49","hashOfConfig":"29"},{"size":769,"mtime":1613594249236,"results":"50","hashOfConfig":"29"},{"size":548,"mtime":1613661557877,"results":"51","hashOfConfig":"29"},{"size":2633,"mtime":1614020047209,"results":"52","hashOfConfig":"29"},{"size":644,"mtime":1614023252268,"results":"53","hashOfConfig":"29"},{"size":2354,"mtime":1613681094792,"results":"54","hashOfConfig":"29"},{"size":740,"mtime":1613862476130,"results":"55","hashOfConfig":"29"},{"size":4213,"mtime":1614021463653,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"143bln",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"172v2a0",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/index.js",[],["115","116"],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/reportWebVitals.js",[],["117","118"],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/App/App.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/styled/Styled.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Header/Header.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Nav/Nav.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Login/Login.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/About/About.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Register/Register.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/contexts/UserContext.js",["119","120","121"],"import React, { Component } from 'react'\nimport AuthApiService from '../services/auth-api-service'\nimport TokenService from '../services/token-service'\nimport IdleService from '../services/idle-service'\nimport api from '../config'\n\nconst UserContext = React.createContext({\n    user: {},\n    posts: [],\n    users: [],\n    players: [],\n    searchResults: false,\n    error: null,\n    addPost: () => {},\n    editPost: () => {},\n    deletePost: () => {},\n    addPlayer: () => {},\n    deletePlayer: () => {},\n    setUser: () => {},\n    processLogin: () => {},\n    processLogout: () => {},\n    handleLoginSuccess: () => {},\n    handleRegistrationSuccess: () => {},\n    handleSubmissionSuccess: () => {},\n    setPosts: () => {},\n    setPlayers: () => {},\n    setUsers: () => {},\n})\n\nexport default UserContext\n\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props)\n    const state = {\n        user: {},\n        posts: [],\n        users: [],\n        players: [],\n        searchResults: false,\n        error: null,\n        addPost: this.handleAddPost,\n        editPost: this.handleEditPost,\n        deletePost: this.handleDeletePost,\n        addPlayer: this.handleAddPlayer,\n        deletePlayer: this.handleDeletePlayer,\n    };\n\n    const jwtPayload = TokenService.parseAuthToken()\n\n    if (jwtPayload)\n      state.user = {\n        id: jwtPayload.user_id,\n        name: jwtPayload.name,\n        username: jwtPayload.sub,\n        team_name: jwtPayload.sub,\n      }\n\n    this.state = state;\n    IdleService.setIdleCallback(this.logoutBecauseIdle)\n  }\n\n  componentDidMount() {\n    if (TokenService.hasAuthToken()) {\n      IdleService.registerIdleTimerResets()\n    }\n\n    this.setPosts();\n    this.setPlayers();\n    this.setUsers();\n  }\n\n  componentWillUnmount() {\n    IdleService.unRegisterIdleResets()\n    TokenService.clearCallbackBeforeExpiry()\n  }\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  } \n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n\n  setUser = user => {\n    this.setState({ user })\n  }\n\n  setPosts() {\n    fetch(`${api.API_ENDPOINT}/posts`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong, please try again.\");\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          posts: data,\n        });\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  }\n\n  setPlayers(){\n    fetch(`${api.API_ENDPOINT}/players`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong, please try again.\");\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          players: data,\n        });\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  }\n\n  setUsers(){\n    console.log('in setUsers')\n    fetch(`${api.API_ENDPOINT}/users`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Something went wrong, please try again.\");\n        }\n        return res;\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          users: data,\n        });\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  }\n\n  \n\n  handleDeletePost = (post_id) => {\n    console.log('handledeletepost', this.state.posts)\n    console.log('deleting post', post_id)\n    const newPosts = this.state.posts.filter((post) => post.id != post_id);\n    console.log('newposts', newPosts)\n    this.setState({\n      posts: newPosts,\n    })\n    console.log('after', this.state.posts)\n  };\n\n  handleDeletePlayer = (player_id) => {\n    const newPlayers = this.state.players.filter((player) => player.user_id != player_id);\n    this.setState({\n      players: newPlayers,\n    })\n  };\n\n  handleEditPost = (editedPost) => {\n    console.log('in handleEditPost in context', editedPost)\n    this.setState({\n      posts: this.state.posts.map((post) => \n        post.id != editedPost.id ? post : editedPost\n      ),\n    });\n  };\n\n  handleAddPost = (newPost) => {\n    this.setState({\n      posts: [...this.state.posts, newPost],\n    });\n  };\n\n  handleAddPlayer = (newPlayer) => {\n    this.setState({\n      players: [...this.state.players, newPlayer],\n    });\n  }\n\n  processLogin = authToken => {\n    TokenService.saveAuthToken(authToken)\n    const jwtPayload = TokenService.parseAuthToken()\n    this.setUser({\n      id: jwtPayload.user_id,\n      name: jwtPayload.name,\n      username: jwtPayload.sub,\n      team_name: jwtPayload.team_name,\n    })\n    IdleService.registerIdleTimerResets()\n  }\n\n  processLogout = () => {\n    TokenService.clearAuthToken()\n    IdleService.unRegisterIdleResets()\n    this.setUser({})\n  }\n\n  logoutBecauseIdle = () => {\n    TokenService.clearAuthToken()\n    IdleService.unRegisterIdleResets()\n    this.setUser({ idle: true })\n  }\n\n  fetchRefreshToken = () => {\n    AuthApiService.refreshToken()\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n      })\n      .catch(err => {\n        this.setError(err)\n      })\n  }\n\n  handleLoginSuccess = (history) => {\n\t\tconst destination = \"/myteam\";\n    console.log('in loginSuccess, history', history)\n\t\thistory.push(destination);\n\t};\n\n  handleRegistrationSuccess = (history) => {\n    const destination = '/login'\n    history.push(destination)\n  }\n\n  handleSubmissionSuccess = () => {\n\t\tconst destination = '/myteam';\n    console.log('in handleSubSuccess, destin', destination)\n    console.log('in sdjsadf;', this.state.history)\n\t\tthis.state.history.push(destination);\n\t};\n\n  render() {\n    const value = {\n      user: this.state.user,\n      users: this.state.users,\n      posts: this.state.posts,\n      players: this.state.players,\n      error: this.state.error,\n      searchResults: this.state.searchResults,\n      setError: this.setError,\n      clearError: this.clearError,\n      setUser: this.setUser,\n      processLogin: this.processLogin,\n      processLogout: this.processLogout,\n      addPost: this.handleAddPost,\n      deletePost: this.handleDeletePost,\n      editPost: this.handleEditPost,\n      addPlayer: this.handleAddPlayer,\n      deletePlayer: this.handleDeletePlayer,\n      handleLoginSuccess: this.handleLoginSuccess,\n      handleRegistrationSuccess: this.handleRegistrationSuccess,\n      handleSubmissionSuccess: this.handleSubmissionSuccess,\n      setPosts: this.setPosts,\n      setPlayers: this.setPlayers,\n      setUsers: this.setUsers,\n    };\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    )\n  }\n}","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostsList.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Post/PostCard.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/config.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UserPage.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UsersList.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayerCard.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayerResults.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/auth-api-service.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/token-service.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/services/idle-service.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/PublicRoute/PublicRoute.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/MyTeam/MyTeam.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Landing/Landing.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Network/Network.js",["122"],"import React, { Component } from 'react';\nimport PostsList from '../Post/PostsList';\nimport UserContext from '../../contexts/UserContext';\nimport UserCard from '../Users/UserCard';\nimport api from '../../config';\n\nexport class Network extends Component {\n    state = {\n        allUsers: [],\n        allPosts: [],\n    }\n\n    static defaultProps = {\n        match: {\n            params: {}\n        }\n    };\n\n    static contextType = UserContext;\n\n    componentDidMount() {\n        //get all users and all posts, add to state as arrays\n        Promise.all([\n            fetch(`${api.API_ENDPOINT}/users`),\n            fetch(`${api.API_ENDPOINT}/posts`),\n        ])\n        .then(([allUsersRes, allPostsRes]) => {\n            if (!allUsersRes.ok)\n                return allUsersRes.json().then((e) => Promise.reject(e));\n            if (!allPostsRes.ok)\n                return allPostsRes.json().then((e) => Promise.reject(e));\n            return Promise.all([allUsersRes.json(), allPostsRes.json()]);\n        })\n        .then(([allUsers, allPosts]) => {\n            this.setState({allUsers, allPosts});\n        })\n        .catch((error) => {\n            console.error({error})\n        })\n    }\n\n    render() {\n        //filter the posts and users from state to exclude logged in user from context\n\n        const users = this.state.allUsers.filter(user => user.id != this.context.user.id)\n\n        const posts = this.state.allPosts\n        \n        return (\n            <div>\n                <h2>Teams</h2>\n                <div className='users-players'>\n                <ul\n                style={{\n                listStyleType: \"none\",\n                textDecoration: \"none\",\n                color: \"inherit\",\n                paddingLeft: \"0\",\n                }}\n                >\n                {users.map((user) => (\n                    <li key={user.id} style={{ textDecoration: \"none\" }}>\n                        <UserCard \n                            user={user}\n                        />\n                    </li>\n                ))}\n                </ul>\n                </div>\n                <h2>Posts</h2>\n                <div>\n                    <PostsList \n                        posts={posts}\n                        users={users}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Network\n","/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Users/UserCard.js",[],"/Users/MikeDent/projects/Thinkful/nba-fantasy/nba-fantasy-client/src/components/Player/PlayersList.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":170,"column":64,"nodeType":"131","messageId":"132","endLine":170,"endColumn":66},{"ruleId":"129","severity":1,"message":"130","line":179,"column":77,"nodeType":"131","messageId":"132","endLine":179,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":189,"column":17,"nodeType":"131","messageId":"132","endLine":189,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":45,"column":66,"nodeType":"131","messageId":"132","endLine":45,"endColumn":68},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]